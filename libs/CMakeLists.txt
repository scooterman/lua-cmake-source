macro(LuaModule LuaModuleName LuaModuleFiles)
	add_library(${LuaModuleName} SHARED ${LuaModuleFiles})

	set(compile_flags "")
	set(link_flags "")
	set(definitions "")

	if(UNIX)
		if(APPLE)
			set(link_flags ${link_flags} "-dynamiclib -single_module -undefined dynamic_lookup")
		else(APPLE)
			set(LIBS ${LIBS} m)
			set(link_flags ${link_flags} "-Wl,-shared")
		endif(APPLE)
	else(UNIX)
		if(WIN32)
			set(definitions "${definitions} -D_CRT_SECURE_NO_DEPRECATE -D_CRT_NONSTDC_NO_DEPRECATE -D_SCL_SECURE_NO_WARNINGS")
			target_link_libraries(${LuaModuleName} lua)
		endif(WIN32)
	endif(UNIX)

	if(NOT ${definitions})
		add_definitions(${definitions})
	endif()

	if(${WITH_LUACPP})
		set_target_properties(${LuaModuleName} PROPERTIES LINKER_LANGUAGE "CXX")
		set_source_files_properties(${LuaModuleFiles} PROPERTIES LANGUAGE "CXX")
	endif(${WITH_LUACPP})

	if(${compile_flags})
		set_target_properties(${LuaModuleName} PROPERTIES COMPILE_FLAGS ${compile_flags})
	endif()

	if(${link_flags})
		set_target_properties(${LuaModuleName} PROPERTIES LINK_FLAGS ${link_flags})
	endif()

	if(WIN32)
		set_target_properties(${LuaModuleName} PROPERTIES PREFIX "../")
	endif(WIN32)
endmacro(LuaModule)

if(${WITH_LUAJIT})
	add_subdirectory(luajit)
else(${WITH_LUAJIT})
	add_subdirectory(lua)
	add_subdirectory(luabitop)
endif(${WITH_LUAJIT})

foreach(LIB ${LUA_BUILD_LIBS})
	add_subdirectory(${LIB})
endforeach()
